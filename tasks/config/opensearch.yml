---
- name: Check if Opensearch data exists.
  stat:
    path: '{{ os_data_path }}/opensearch/nodes'
  register: os_data_result

- name: Opensearch configuration file transfer.
  template:
    src: '{{ item.src }}'
    dest: '{{ item.dest }}'
    owner: '{{ item.owner }}'
    group: '{{ item.owner }}'
    mode: '{{ item.mode }}'
  loop: '{{ os_conf }}'
  notify: Restart Opensearch service.
  when: not os_data_result.stat.exists

- name: Check Opensearch if initialized.
  lineinfile:
    path: '{{ os_soft_path }}/opensearch/plugins/opensearch-security/securityconfig/internal_users.yml'
    regexp: '^prometheus:'
    line: 'prometheus:'
    state: 'present'
  check_mode: yes
  register: os_init_result

- name: Initial users that you want to add to the security plugin internal user database.
  template:
    src: '{{ item }}'
    dest: '{{ os_soft_path }}/opensearch/plugins/opensearch-security/securityconfig/{{ item }}'
    owner: '{{ os_arg.user }}'
    group: '{{ os_arg.user }}'
    mode: '600'
  loop:
    - 'internal_users.yml'
    - 'config.yml'
  when: os_init_result is changed
  no_log: true

- name: Opensearch internal users password outputs.
  template:
    src: 'os_internal_users.passwd'
    dest: '/tmp/os_internal_users.passwd'
    mode: '400'
    owner: 'root'
    group: 'root'
  when: 
    - os_servers[0] in ansible_default_ipv4.address
    - os_init_result is changed
  no_log: true
