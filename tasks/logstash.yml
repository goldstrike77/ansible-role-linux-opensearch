---
- name: Creating LogStash configuration folder.
  file:
    dest: '/etc/logstash/{{ item }}'
    state: 'directory'
    owner: 'logstash'
    group: 'logstash'
    mode: '0750'
  loop:
    - 'conf.d'
    - 'template'
    - 'patterns'

- name: Geolocation database download.
  unarchive:
    src: "http://download.maxmind.com/app/geoip_download?edition_id=GeoLite2-City&license_key=SdCj43scfhnayMbp&suffix=tar.gz"
    dest: '/etc/logstash'
    owner: 'logstash'
    group: 'logstash'
    mode: '0755'
    extra_opts: [--strip-components=1]
    exclude:
      - 'COPYRIGHT.txt'
      - 'LICENSE.txt'
      - 'README.txt'
    remote_src: 'yes'
    validate_certs: 'no'
  register: opensearch_geo_file_download
  until: opensearch_geo_file_download is succeeded
  retries: 5
  delay: 2
  changed_when: false
  failed_when: false

- name: LogStash configuration file transfer.
  template:
    src: '{{ item.src }}.j2'
    dest: '{{ item.dest }}'
    owner: '{{ item.owner }}'
    group: '{{ item.owner }}'
    mode: '{{ item.mode }}'
  loop: '{{ opensearch_logstash_conf }}'
  notify: Restart LogStash service.

- name: LogStash input configuration file transfer.
  template:
    src: 'conf/{{ item.name }}.conf.j2'
    dest: '/etc/logstash/conf.d/{{ item.name }}.conf'
    backup: 'yes'
    owner: 'logstash'
    group: 'logstash'
    mode: '0640'
  loop: '{{ opensearch_logstash_inputs_arg }}'
  notify: Restart LogStash service.

- name: Logstash input template file transfer.
  template:
    src: 'template/logstash-{{ item.name }}-template.json.j2'
    dest: '/etc/logstash/template/logstash-{{ item.name }}-template.json'
    backup: 'yes'
    owner: 'logstash'
    group: 'logstash'
    mode: '0640'
  loop: '{{ opensearch_logstash_inputs_arg }}'
  loop_control:
    index_var: index
  notify: Restart LogStash service.

- name: Logstash input pattern file transfer.
  copy:
    src: 'pattern/esguardian-{{ item.name }}'
    dest: '/etc/logstash/patterns/esguardian-{{ item.name }}'
    owner: 'logstash'
    group: 'logstash'
    mode: '0640'
  loop: '{{ opensearch_logstash_inputs_arg }}'
  notify: Restart LogStash service.